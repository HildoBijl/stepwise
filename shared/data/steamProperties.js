const { FloatUnit } = require('../inputTypes/FloatUnit')

// Data for a given temperature.
const temperatureRange = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 255, 260, 265, 270, 275, 280, 285, 290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 345, 350, 355, 360, 365, 370].map(T => new FloatUnit({ float: T, unit: 'dC' }).makeExact())
const withTemperature = {
	boilingPressure: {
		grid: ['0.0061', '0.0123', '0.0234', '0.0424', '0.0737', '0.1233', '0.1992', '0.3116', '0.4736', '0.7011', '1.013', '1.433', '1.985', '2.701', '3.614', '4.76', '6.18', '7.92', '10.03', '12.55', '15.55', '19.08', '23.20', '27.98', '33.48', '39.78', '43.24', '46.94', '50.87', '55.05', '59.49', '64.19', '69.17', '74.45', '80.03', '85.9', '92.1', '98.7', '105.6', '112.9', '120.6', '128.7', '137.1', '146.1', '155.5', '165.4', '175.8', '186.7', '198.3', '210.5'].map(p => new FloatUnit({ float: p, unit: 'bar' })),
	},
	enthalpyLiquid: {
		grid: ['0.0', '42.0', '83.9', '125.6', '167.3', '209.1', '250.9', '292.8', '334.7', '376.8', '418.9', '461.1', '503.5', '546.1', '588.9', '631.9', '675.2', '718.8', '762.7', '807.0', '851.8', '897.1', '943.0', '989.6', '1036.9', '1085.1', '1109.5', '1134.3', '1159.3', '1184.5', '1210.2', '1236.1', '1262.5', '1289.3', '1316.5', '1344.2', '1372.5', '1401.3', '1430.9', '1461.3', '1492.5', '1524.8', '1558.4', '1593.5', '1630.5', '1670.3', '1714.5', '1762.2', '1817.9', '1893.7'].map(h => new FloatUnit({ float: h, unit: 'kJ/kg' })),
	},
	enthalpyVapor: {
		grid: ['2500.5', '2518.9', '2537.3', '2555.5', '2573.5', '2591.3', '2608.8', '2625.9', '2642.5', '2658.7', '2674.4', '2689.6', '2704.2', '2718.3', '2731.8', '2744.5', '2756.5', '2767.6', '2777.6', '2786.3', '2793.7', '2799.4', '2803.4', '285.4', '2805.1', '2802.5', '2800.3', '2797.4', '2793.8', '2789.5', '2784.5', '2778.7', '2772.2', '2764.9', '2756.9', '2745.0', '2738.3', '2727.7', '2716.8', '2702.4', '2685.7', '2666.4', '2644.3', '2620.2', '2593.4', '2562.3', '2527.3', '2483.1', '2425.9', '2339.9'].map(h => new FloatUnit({ float: h, unit: 'kJ/kg' })),
	},
	entropyLiquid: {
		grid: ['0.0000', '0.1511', '0.2963', '0.4364', '0.5718', '0.7031', '0.8304', '0.9542', '1.0747', '1.1920', '1.3063', '1.4179', '1.5270', '1.6338', '1.7383', '1.8409', '1.9416', '2.0407', '2.1382', '2.2343', '23293', '2.4232', '2.5162', '2.6086', '2.7004', '2.7918', '2.8375', '2.8832', '2.9289', '2.9747', '3.0206', '3.0666', '3.1128', '3.1593', '3.2061', '3.2532', '3.3008', '3.3489', '3.3977', '3.4473', '3.4978', '3.5495', '3.6026', '3.6577', '3.7154', '3.7768', '3.8431', '3.9159', '4.0013', '4.1131'].map(s => new FloatUnit({ float: s, unit: 'kJ/kg * K' })),
	},
	entropyVapor: {
		grid: ['9.1545', '8.8985', '8.6652', '8.4516', '8.2553', '8.0745', '7.9074', '7.7526', '7.6088', '7.4749', '7.3500', '7.2331', '7.1236', '7.0208', '6.9240', '6.8325', '6.7456', '6.6628', '6.5833', '6.5067', '6.4322', '6.3593', '6.2875', '6.2162', '6.1452', '6.0738', '6.0380', '6.0019', '5.9656', '5.9290', '5.8921', '5.8549', '5.8174', '5.7794', '5.7410', '5.7022', '5.6629', '5.6232', '5.5837', '5.5401', '5.4924', '5.4422', '5.3884', '5.3321', '5.2733', '5.2087', '5.1371', '5.0545', '4.9541', '4.8069'].map(s => new FloatUnit({ float: s, unit: 'kJ/kg * K' })),
	},
}
Object.values(withTemperature).forEach(column => {
	column.labels = ['Temperature']
	column.headers = [temperatureRange]
})
module.exports.withTemperature = withTemperature

// Data for a given pressure.
const pressureRange = [0.01, 0.02, 0.05, 0.1, 0.2, 0.4, 0.6, 0.8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 36, 40, 45, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210].map(p => new FloatUnit({ float: p, unit: 'bar' }).makeExact())
const withPressure = {
	boilingTemperature: {
		grid: ['6.98', '17.51', '32.9', '45.8', '60.1', '75.9', '86.0', '93.5', '99.6', '120.2', '133.5', '143.6', '151.9', '158.8', '165.0', '170.4', '175.4', '180.0', '188.0', '195.0', '201.4', '207.1', '212.4', '217.2', '221.8', '226.0', '230.0', '233.8', '237.4', '244.2', '250.3', '257.4', '263.9', '275.6', '285.8', '295.0', '303.3', '311.0', '318.0', '324.6', '330.8', '336.6', '342.1', '347.3', '352.3', '357.0', '361.4', '365.7', '369.8'].map(T => new FloatUnit({ float: T, unit: 'dC' })),
	},
	enthalpyLiquid: {
		grid: ['29.4', '73.5', '137.7', '191.7', '251.3', '317.5', '359.7', '391.5', '417.3', '504.5', '561.2', '604.4', '639.9', '670.1', '696.7', '720.6', '742.2', '762.2', '797.9', '829.5', '858.0', '884.0', '908.0', '930.3', '951.3', '971.0', '989.8', '1007.7', '1024.7', '1056.9', '1086.7', '1121.4', '1153.8', '1213.1', '1266.7', '1316.4', '1362.9', '1407.0', '1449.3', '1490.2', '1530.2', '1569.6', '1608.9', '1648.5', '1689.4', '1732.9', '1777.3', '1826.7', '1889.9'].map(h => new FloatUnit({ float: h, unit: 'kJ/kg' })),
	},
	enthalpyVapor: {
		grid: ['2513.4', '2532.7', '2560.7', '2583.9', '2608.9', '2635.7', '2652.2', '2664.3', '2673.8', '2704.6', '2723.2', '2736.5', '2746.8', '2755.2', '2762.1', '2768.0', '2773.1', '2777.5', '2784.7', '2790.2', '2794.6', '2798.0', '2800.6', '2802.5', '2803.9', '2804.8', '2805.4', '2805.5', '2805.4', '2804.4', '2802.4', '2799.0', '2794.6', '2783.9', '2771.1', '2756.9', '2741.6', '2725.6', '2708.7', '2687.2', '2663.5', '2637.7', '2610.5', '2581.2', '2547.0', '2511.4', '2468.4', '2416.0', '2344.9'].map(h => new FloatUnit({ float: h, unit: 'kJ/kg' })),
	},
	entropyLiquid: {
		grid: ['0.1061', '0.2607', '0.4761', '0.6489', '0.8316', '1.0255', '1.1449', '1.2324', '1.3022', '1.5295', '1.6711', '1.7757', '1.8596', '1.9300', '1.9909', '2.0447', '2.0931', '2.1370', '2.2148', '2.2823', '2.3422', '2.3961', '2.4453', '2.4906', '2.5327', '2.5720', '2.6089', '2.6438', '2.6769', '2.7385', '2.7949', '2.8596', '2.9190', '3.0257', '3.1203', '3.2059', '3.2847', '3.3582', '3.4277', '3.4941', '3.5580', '3.6203', '3.6818', '3.7433', '3.8062', '3.8707', '3.9389', '4.0151', '4.1073'].map(s => new FloatUnit({ float: s, unit: 'kJ/kg * K' })),
	},
	entropyVapor: {
		grid: ['8.9734', '8.7214', '8.3930', '8.1480', '7.9060', '7.6667', '7.5280', '7.4300', '7.3544', '7.1212', '6.9859', '6.8902', '3.8161', '6.7555', '6.7041', '6.6594', '6.6198', '6.5843', '6.5221', '6.4689', '6.4221', '6.3802', '6.3422', '6.3072', '6.2748', '6.2445', '6.2159', '6.1890', '6.1634', '6.1155', '6.0714', '6.026', '5.9735', '5.8880', '5.8113', '5.7412', '5.6762', '5.6155', '5.5584', '5.4971', '5.4353', '5.3726', '5.3104', '5.2471', '5.1775', '5.1062', '5.0280', '4.9375', '4.8149'].map(s => new FloatUnit({ float: s, unit: 'kJ/kg * K' })),
	},
}
Object.values(withPressure).forEach(column => {
	column.labels = ['Pressure']
	column.headers = [pressureRange]
})
module.exports.withPressure = withPressure

// Enthalpy of superheated steam.

// const enthalpy = {
// 	labels: ['Temperature', 'Pressure'],
// 	headers: [
// 		[20, 22, 24, 26].map(x => new FloatUnit({ float: x, unit: 'bar' }).makeExact()),
// 		[220, 240, 260].map(x => new FloatUnit({ float: x, unit: 'dC' }).makeExact()),
// 	],
// 	grid: [
// 		['2824.6', '2811.7', undefined, undefined],
// 		['2880.0', '2870.6', '2860.6', '2850.1'],
// 		['2930.0', '2922.4', '2914.5', '2906.4'],
// 	].map(arr => arr.map(x => x === undefined ? undefined : new FloatUnit({ float: x, unit: 'kJ/kg' }))),
// }
// const res = gridInterpolate([new FloatUnit('22.1 bar'), new FloatUnit('239 dC')], enthalpy.grid, ...enthalpy.headers)
// console.log(res && res.str)