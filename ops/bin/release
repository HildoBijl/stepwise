#!/bin/bash

clear

#
# Revision
#
echo -e '\033[104m          RELEASE          \033[0m'
echo 'Release latest master into production'

#
# Confirm dialog
#
read -p $'Type \033[0;36myes\033[0m to proceed: ' -r
echo
if [[ ! "$REPLY" == "yes" ]]; then
	echo "Aborted."
	exit 1
fi

#
# Release procedure
#
set -e
error_message() {
	echo -e '\n\033[41m     ERROR     \033[0m'
	echo '1. See the output above for error messages and fix the problems.'
	echo '2. Ensure that the website is up and running.'
	echo '3. Repeat the release procedure (or rollback) until it succeeds.'
	exit 1
}
trap 'error_message' ERR

echo -e '\033[46m [STEP 1/4] \033[0m Get latest git revision'
cd /app
git clean -fxd
git checkout master
git pull

echo -e '\033[46m [STEP 2/4] \033[0m Install dependencies and build'
docker-compose -f ops/docker-compose.yml -p app pull

echo -e '\033[46m [STEP 3/4] \033[0m Restart application, run migrations'
systemctl stop app
# TODO replace with migration:
docker-compose -f ops/docker-compose.yml -p app run --rm api npm db:clear
systemctl start app

echo -e '\033[46m [STEP 4/4] \033[0m Cleanup'
docker image rm $(docker image ls -f "dangling=true" -q) || true

echo -e '\n\033[42m   COMPLETED   \033[0m'

#
# Health checks
#
health
echo
